#User function Template for python3

class Solution:
    
	def ShortestDistance(self, matrix):
		# Code here
		m, n = len(matrix), len(matrix[0])
		ans=[]
        for i in range(m):
            ans.append([])
            for j in range(n):
                ans[i].append(0)
		
		def valid(matrix,i,j):
		    if i<len(matrix) and j <len(matrix[0]):
		        if matrix[i][j]!=0:
		            return True 
		    return False
		        
		
		def ratmaze(matrix,ans,i,j):
		    if (i==len(matrix)-1 and j==len(matrix[0])-1):
		        return True
		    if valid(matrix,i,j):
		        ans[i][j]=1 
		        for w in range(1,matrix[i][j]+1):
		            if ratmaze(matrix,ans,i,j+w):
		                return True 
		            if ratmaze(matrix,ans,i+w,j):
		                return True  
		        ans[i][j]=0 
		    return False 
	    if ratmaze(matrix,ans,0,0):
	        ans[-1][-1]=1
	        return ans 
	    return [[-1]]
		                
		        


#{ 
 # Driver Code Starts
#Initial Template for Python 3

if __name__ == '__main__':
	T=int(input())
	for i in range(T):
		n = int(input())
		matrix= []
		for i in range(n):
			a = list(map(int, input().split()))
			matrix.append(a)
		ob = Solution()
		ans = ob.ShortestDistance(matrix)
		for i in ans:
			for j in i:
				print(j, end = " ")
			print()

# } Driver Code Ends
