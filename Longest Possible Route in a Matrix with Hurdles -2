def check(i,j,M):
    
    r=len(M)
    c=len(M[0])
    
    if i<0 or i>=r:
        return 0 
    
    if j<0 or j>=c:
        return 0 
     
 
    if M[i][j]==0 or T[i][j]==1:
        return 0 
    
    return 1 
    
def solve(i,j,R,C,M):
   
    global maxm,T,cur
    if i==R and j==C and cur>maxm:
        maxm=cur 
    
    if check(i,j+1,M):
        cur+=1 
        T[i][j+1]=1 
        solve(i,j+1,R,C,M,)
        T[i][j+1]=0
        cur-=1
        
    
    if check(i,j-1,M):
        cur+=1 
        T[i][j-1]=1 
        solve(i,j-1,R,C,M)
        T[i][j-1]=0
        cur-=1
        
    if check(i+1,j,M):
        cur+=1 
        T[i+1][j]=1 
        solve(i+1,j,R,C,M)
        T[i+1][j]=0
        cur-=1
    
    if check(i-1,j,M):
        cur+=1 
        T[i-1][j]=1 
        solve(i-1,j,R,C,M)
        T[i-1][j]=0
        cur-=1
    
    return maxm 
maxm=0 
cur=0
M =   [ [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ],
        [ 1, 1, 0, 1, 1, 0, 1, 1, 0, 1 ],
        [ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ] ]
R=1 
C=7

T=[]
for i in range(len(M)):
    T.append([0]*len(M[0]))
T[0][0]=1
print(solve(0,0,R,C,M))

        
    
