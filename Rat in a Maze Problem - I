#User function Template for python3

class Solution:
    # def findPath(self, m, n):
    #     # code here
        def findPath(self, m, n):
        # code here
        
            def check(m,r,j):
                
                if r<0 or r>=len(m):
                    return 0 
                if j<0 or j>=len(m[0]):
                    return 0 
                if m[r][j]==0:
                    return 0 
                if self.visited[r][j]==1:
                    return 0 
                self.visited[r][j]=1
                
                return 1
                
           
            def solve(m,r,j):
                if m[0][0]==0:
                    return []
               
                
                if r==len(m)-1 and j==len(m[0])-1:
                    self.ans.append(self.path)
                    
                #Up
                if check(m,r-1,j):
                    self.path+="U"
                    solve(m,r-1,j)
                    self.visited[r-1][j]=0
                    self.path=self.path[:len(self.path)-1]
                    
                    
                #Down
                if check(m,r+1,j):
                    self.path+="D"
                    solve(m,r+1,j)
                    self.visited[r+1][j]=0
                    self.path=self.path[:len(self.path)-1]
                   
                #Right
                if check(m,r,j+1):
                    self.path+="R"
                    solve(m,r,j+1)
                    self.visited[r][j+1]=0
                    self.path=self.path[:len(self.path)-1]
                    
                #Left
                if check(m,r,j-1):
                    self.path+="L"
                    solve(m,r,j-1)
                    self.visited[r][j-1]=0
                    self.path=self.path[:len(self.path)-1]
                   
            self.visited=[]
            for i in range(n):
                self.visited.append([0]*n)
            self.visited[0][0]=1
            self.ans=[]
            self.path=''
            solve(m,0,0)
            return self.ans
            
            


#{ 
 # Driver Code Starts
#Initial Template for Python 3

if __name__=='__main__':
    t = int(input())
    for i in range(t):
        n = list(map(int, input().strip().split()))
        arr = list(map(int, input().strip().split()))
        
        matrix = [[0 for i in range(n[0])]for j in range(n[0])]
        k=0
        for i in range(n[0]):
            for j in range(n[0]):
                matrix[i][j] = arr[k]
                k+=1
        ob = Solution()
        result = ob.findPath(matrix, n[0])
        result.sort()
        if len(result) == 0 :
            print(-1)
        else:
            for x in result:
                print(x,end = " ")
            print()
# } Driver Code Ends
